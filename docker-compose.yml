services:
  # web:
  #   container_name: web
  #   build:
  #     context: .
  #     dockerfile: ./apps/web/Dockerfile
  #     # target: development
  #   restart: always
  #   ports:
  #     - 3000:3000
  #     # - 5173:5173
  #   volumes: # ADICIONE ISSO!
  #     - .:/app
  #     - /app/node_modules
  #     - /app/apps/web/node_modules
  #     - /app/packages/node_modules
  #   # environment:
  #   #   - PORT=3000
  #   networks:
  #     - challenge-network
  # auth-service:
  #   container_name: auth-service
  #   build:
  #     context: .
  #     dockerfile: ./apps/auth-service/Dockerfile
  #     target: development
  #   restart: always
  #   ports:
  #     - 3002:3002
  #   environment:
  #     - PORT=3002
  #     - CHOKIDAR_USEPOLLING=true
  #     - CHOKIDAR_INTERVAL=300
  #     - WATCHPACK_POLLING=true

  #   volumes:
  #     - .:/app
  #     - /app/node_modules
  #     - /app/apps/auth-service/node_modules
  #     - /app/packages/node_modules
  #   networks:
  #     - challenge-network
  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: rabbitmq
    attach: false
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - challenge-network
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
  postgres:
    image: postgres:17.5-alpine3.21
    container_name: db
    ports:
      - "5432:5432"
    networks:
      - challenge-network
    restart: always
    environment:
      POSTGRES_DB: challenge_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
    volumes:
      - postgres-data:/var/lib/postgresql

volumes:
  rabbitmq-data:
  postgres-data:

networks:
  challenge-network:
    external: true
